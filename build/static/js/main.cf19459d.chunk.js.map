{"version":3,"sources":["components/TodoList/sub-components/TodoList__activities.js","components/TodoList/sub-components/Add__button.js","components/TodoList/sub-components/Add__input.js","components/TodoList/sub-components/TodoList__add.js","components/TodoList/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["TodoList__activities","this","props","todos","map","todo","key","id","className","activity","onClick","e","preventDefault","deleteEv","Component","TodoList__AddBtn","handleClick","bind","idCount","newId","addEv","newTodo","Add__input","name","type","value","onChange","changeEv","TodoList__add","state","change","target","setState","htmlFor","TodoList","addActivity","deleteActivity","JSON","parse","localStorage","getItem","checked","status","setItem","stringify","filter","index","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mRA4BeA,E,iLAxBJ,IAAD,OACR,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GAC5B,OACC,yBAAKC,IAAKD,EAAKE,GAAIC,UAAU,8BAC5B,0BAAMA,UAAU,sBAAsBH,EAAKI,UAC3C,0BACCD,UAAU,sBACVE,QAAS,SAACC,GACTA,EAAEC,iBACF,EAAKV,MAAMW,SAASR,EAAKE,MAJ3B,a,GAN8BO,a,QCkCpBC,E,YAlCd,WAAYb,GAAQ,IAAD,8BAClB,4CAAMA,KACDc,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,GAAK,EAAKW,UAJG,E,2EAQlB,IAAIC,EAAQlB,KAAKM,KACjBN,KAAKC,MAAMkB,MAAMD,EAAOlB,KAAKC,MAAMmB,SAAS,K,gCAI5C,IAAId,EAAK,EACT,OAAO,kBAAMA,O,+BAGJ,IAAD,OACR,OACC,kBAAC,WAAD,KACC,4BACCC,UAAU,eACVE,QAAS,SAACC,GACTA,EAAEC,iBACF,EAAKI,gBAJP,kB,GArB2BF,aCiBhBQ,E,iLAfb,OACC,kBAAC,WAAD,KACC,2BACCC,KAAK,UACLC,KAAK,OACLjB,GAAG,MACHC,UAAU,cACViB,MAAOxB,KAAKC,MAAMmB,QAClBK,SAAUzB,KAAKC,MAAMyB,gB,GAVDb,aC8BVc,E,YA3Bd,WAAY1B,GAAQ,IAAD,8BAClB,4CAAMA,KACD2B,MAAQ,CACZR,QAAS,IAEV,EAAKS,OAAS,EAAKA,OAAOb,KAAZ,gBALI,E,uEAQC,IAAXc,EAAU,EAAVA,OACR9B,KAAK+B,SAAL,eACED,EAAOR,KAAOQ,EAAON,U,+BAKvB,OACC,yBAAKjB,UAAU,uBACd,2BAAOyB,QAAQ,MAAMzB,UAAU,eAA/B,aAGA,kBAAC,EAAD,CAAUmB,SAAU1B,KAAK6B,OAAQT,QAASpB,KAAK4B,MAAMR,UACrD,kBAAC,EAAD,CAAQD,MAAOnB,KAAKC,MAAMkB,MAAOC,QAASpB,KAAK4B,MAAMR,e,GAtB7BP,aCuDboB,E,YAtDd,WAAYhC,GAAQ,IAAD,8BAClB,4CAAMA,KACD2B,MAAQ,CACZ1B,MAAO,IAER,EAAKgC,YAAc,EAAKA,YAAYlB,KAAjB,gBACnB,EAAKmB,eAAiB,EAAKA,eAAenB,KAApB,gBANJ,E,0LAUEoB,KAAKC,MAAMC,aAAaC,QAAQ,W,QAA9CrC,E,SAELA,EAAMC,KAAI,SAACC,GACV,OAAO,EAAK8B,YAAY9B,EAAKE,GAAIF,EAAKI,SAAUJ,EAAKoC,Y,yEAKtCtB,EAAOV,EAAUiC,G,4FAC5BzC,KAAK+B,SAAS,CACnB7B,MAAM,GAAD,mBACDF,KAAK4B,MAAM1B,OADV,CAEJ,CACCI,GAAIY,EACJV,SAAUA,EACVgC,QAASC,Q,iCAINH,aAAaI,QAAQ,QAASN,KAAKO,UAAU3C,KAAK4B,MAAM1B,S,sFAGhDG,GACd,IAAIH,EAAQF,KAAK4B,MAAM1B,MACvBA,EAAQA,EAAM0C,QAAO,SAAC1C,EAAO2C,GAAR,QAAoB3C,EAAMI,KAAOD,MACtDL,KAAK+B,SAAS,CACb7B,MAAOA,IAERoC,aAAaI,QAAQ,QAASN,KAAKO,UAAUzC,M,+BAI7C,OACC,yBAAKK,UAAU,YACd,wBAAIA,UAAU,cAAd,aACA,yBAAKA,UAAU,gCACd,kBAAC,EAAD,CAAYL,MAAOF,KAAK4B,MAAM1B,MAAOU,SAAUZ,KAAKmC,kBAErD,kBAAC,EAAD,CAAKhB,MAAOnB,KAAKkC,mB,GAjDErB,aCURiC,MAVf,WACC,OACC,yBAAKvC,UAAU,OACd,0BAAMA,UAAU,QACf,kBAAC,EAAD,SCIgBwC,QACU,cAA7BC,OAAOC,SAASC,UAEc,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,2DCbHC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H5C,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GACnCA,EAAaC,kB","file":"static/js/main.cf19459d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoList__activities extends Component {\r\n\trender() {\r\n\t\treturn this.props.todos.map((todo) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={todo.id} className='TodoList__activity-wrapper'>\r\n\t\t\t\t\t<span className='TodoList__activity'>{todo.activity}</span>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName='TodoList__erase-btn'\r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tthis.props.deleteEv(todo.id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tX\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nTodoList__activities.propTypes = {\r\n\ttodos: PropTypes.array.isRequired\r\n};\r\n\r\nexport default TodoList__activities;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nclass TodoList__AddBtn extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t\tthis.idCount = this.idCount.bind(this);\r\n\t\tthis.id = this.idCount();\r\n\t}\r\n\r\n\thandleClick() {\r\n\t\tlet newId = this.id();\r\n\t\tthis.props.addEv(newId, this.props.newTodo, false);\r\n\t}\r\n\r\n\tidCount() {\r\n\t\tlet id = 1;\r\n\t\treturn () => id++;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='form__button'\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tthis.handleClick();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tAñadir\r\n\t\t\t\t</button>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoList__AddBtn;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nclass Add__input extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname='newTodo'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tid='add'\r\n\t\t\t\t\tclassName='form__input'\r\n\t\t\t\t\tvalue={this.props.newTodo}\r\n\t\t\t\t\tonChange={this.props.changeEv}\r\n\t\t\t\t/>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Add__input;\r\n","import React, { Component } from 'react';\r\nimport AddBtn from './Add__button';\r\nimport AddInput from './Add__input';\r\n\r\nclass TodoList__add extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tnewTodo: ''\r\n\t\t};\r\n\t\tthis.change = this.change.bind(this);\r\n\t}\r\n\r\n\tchange({ target }) {\r\n\t\tthis.setState({\r\n\t\t\t[target.name]: target.value\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='form__field-wrapper'>\r\n\t\t\t\t<label htmlFor='add' className='form__label'>\r\n\t\t\t\t\tAñadir\r\n\t\t\t\t</label>\r\n\t\t\t\t<AddInput changeEv={this.change} newTodo={this.state.newTodo} />\r\n\t\t\t\t<AddBtn addEv={this.props.addEv} newTodo={this.state.newTodo} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoList__add;\r\n","import React, { Component } from 'react';\r\nimport Activities from './sub-components/TodoList__activities';\r\nimport Add from './sub-components/TodoList__add';\r\n\r\nclass TodoList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttodos: []\r\n\t\t};\r\n\t\tthis.addActivity = this.addActivity.bind(this);\r\n\t\tthis.deleteActivity = this.deleteActivity.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst todos = await JSON.parse(localStorage.getItem('todos'));\r\n\t\tif (todos) {\r\n\t\t\ttodos.map((todo) => {\r\n\t\t\t\treturn this.addActivity(todo.id, todo.activity, todo.checked);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tasync addActivity(newId, activity, status) {\r\n\t\tawait this.setState({\r\n\t\t\ttodos: [\r\n\t\t\t\t...this.state.todos,\r\n\t\t\t\t{\r\n\t\t\t\t\tid: newId,\r\n\t\t\t\t\tactivity: activity,\r\n\t\t\t\t\tchecked: status\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t});\r\n\t\tawait localStorage.setItem('todos', JSON.stringify(this.state.todos));\r\n\t}\r\n\r\n\tdeleteActivity(key) {\r\n\t\tlet todos = this.state.todos;\r\n\t\ttodos = todos.filter((todos, index) => !(todos.id === key));\r\n\t\tthis.setState({\r\n\t\t\ttodos: todos\r\n\t\t});\r\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='TodoList'>\r\n\t\t\t\t<h1 className='main-title'>Todo List</h1>\r\n\t\t\t\t<div className='TodoList__activities-wrapper'>\r\n\t\t\t\t\t<Activities todos={this.state.todos} deleteEv={this.deleteActivity} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Add addEv={this.addActivity} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport './scss/index.scss';\nimport TodoList from './components/TodoList/TodoList';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<main className='main'>\n\t\t\t\t<TodoList />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}